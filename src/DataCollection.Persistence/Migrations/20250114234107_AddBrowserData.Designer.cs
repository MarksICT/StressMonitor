// <auto-generated />
using System;
using DataCollection.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataCollection.Persistence.Migrations
{
    [DbContext(typeof(DataCollectorDbContext))]
    [Migration("20250114234107_AddBrowserData")]
    partial class AddBrowserData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("DataCollection.Persistence.Entities.BrowserDataEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("StopTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("TabId")
                        .HasMaxLength(50)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Uri")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BrowserData");
                });

            modelBuilder.Entity("DataCollection.Persistence.Entities.WindowsDataEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProcessFileName")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProcessFriendlyName")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("StopTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("WindowTitle")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WindowsData");
                });
#pragma warning restore 612, 618
        }
    }
}
